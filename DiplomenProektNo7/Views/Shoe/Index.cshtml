@model IEnumerable<DiplomenProektNo7.Models.Shoe.ShoeIndexVM>
@using DiplomenProektNo7.Models.Order

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        background: linear-gradient(to right, #f5a5b8, #c4d4e8);
    }

    th, td {
        padding: 10px;
        text-align: left;
    }

    th {
        background-color: lightblue;
    }

    tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    tbody tr:hover {
        background-color: lightblue;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    a {
        color: #444444;
        text-decoration: none;
    }

    .create-link {
        display: block;
        margin-bottom: 10px;
    }

    .filter-form {
        margin-bottom: 20px;
    }

        .filter-form input[type="text"] {
            padding: 5px;
            border-radius: 5px;
            border: none;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
            margin-right: 10px;
        }

        .filter-form input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

    .order-link {
        background-color: #4CAF50;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

        .order-link:hover {
            background-color: #3e8e41;
        }

    .edit-link,
    .delete-link,
    .details-link {
        background-color: #f44336;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

        .edit-link:hover,
        .delete-link:hover,
        .details-link:hover {
            background-color: #da190b;
        }
</style>
<h1>All Shoes</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
{
    <a asp-action="Create" class="create-link">Create New</a>
}

<form asp-controller="Shoe" asp-action="Index" method="get" class="filter-form">
    <div>
        <label for="SearchStringBrandName">Brand:</label>
        <input type="text" id="SearchStringBrandName" name="SearchStringBrandName" />
    </div>
    <div>
        <label for="SearchStringCategoryName">Category:</label>
        <input type="text" id="SearchStringCategoryName" name="SearchStringCategoryName" />
    </div>
    <div>
        <input type="submit" value="Filter" />
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ShoeName)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.BrandId)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.BrandName)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.CategoryId)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Colour)
            </th>
            @if (this.User.Identity.IsAuthenticated)
            {
                <th>
                    Order
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ShoeName)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.BrandId)
            </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.BrandName)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.CategoryId)
            </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.Picture)" alt="Image" width="100" />
                    @*@Html.DisplayFor(modelItem => item.Picture)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount) %
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Colour)
                </td>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <td>
                        @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                {
                ShoeId = item.Id
                })
                    </td>
                }
                <td>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    } |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
